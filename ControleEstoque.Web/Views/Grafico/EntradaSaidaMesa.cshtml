

<html>
<head>
    <script src="~/Scripts/loader.js"></script>
    <script src="~/Scripts/jquery-3.4.0.min.js"></script>

    <script>
        var dadosEntradas;
        var url_entradas = '@Url.Action("GetDadosEntradas", "Grafico")';
        $.post(url_entradas, function (response) {
            if (response && response.length > 0) {
                dadosEntrada = response;
            }
        })



        var dadosSaidas;
        var url_saidas = '@Url.Action("GetDadosSaidas", "Grafico")';
        $.post(url_saidas, function (response) {
            if (response && response.length > 0) {
                dadosSaidas = response;
            }
        })




    </script>

    <script type="text/javascript">

    jQuery(document).ready(function () {
        setTimeout(function () {



            google.charts.load('current', { 'packages': ['corechart'] });
            google.charts.setOnLoadCallback(drawChart);

            function drawChart() {
                var data = new google.visualization.DataTable();
                data.addColumn('string', 'Mes/Ano');
                data.addColumn('number', 'Entradas (Compras) R$');
                data.addColumn('number', 'Saidas (Vendas) R$');

                for (var i in dadosEntrada) {
                    for (var j in dadosSaidas) {

                        var entradaValor = dadosEntrada[i]["total"];
                        var saidaValor = dadosSaidas[j]["total"];

                        var dataConvertEntrada = parseJsonDate(dadosEntrada[i]["Data"]);
                        var dataConvertSaida = parseJsonDate(dadosSaidas[j]["Data"]);


                        if (dataConvertEntrada == dataConvertSaida) {
                            data.addRows([
                              [dataConvertEntrada, entradaValor, saidaValor],

                            ]);
                        }
                    }
                }

                //Deserilização da Data JSON
                function parseJsonDate(jsonDate) {
                    var offset = new Date().getTimezoneOffset() * 60000;
                    var parts = /\/Date\((-?\d+)([+-]\d{2})?(\d{2})?.*/.exec(jsonDate);
                    if (parts[2] == undefined) parts[2] = 0;
                    if (parts[3] == undefined) parts[3] = 0;
                    d = new Date(+parts[1] + offset + parts[2] * 3600000 + parts[3] * 60000);
                    date = d.getDate() + 1;
                    date = date < 10 ? "0" + date : date;
                    mon = d.getMonth() + 1;
                    mon = mon < 10 ? "0" + mon : mon;
                    year = d.getFullYear();
                    return (mon + "/" + year);
                };

                //Opções do Gráfico
                var options = {
                    title: 'Entradas (Compras) e Saídas (Vendas)',
                    curveType: 'function',
                    legend: { position: 'bottom' },
                    series: {
                        0: { color: '#d21625' },
                        1: { color: '#16d265' },
                    }
                };


                var chart = new google.visualization.LineChart(document.getElementById('curve_chart'));

                chart.draw(data, options);
            }

        }, 1500);
    });
    </script>

</head>
<body>
    <div id="curve_chart" style="width: 900px; height: 500px"></div>
    <br /><br /><br />
    <canvas id="myChart"></canvas>


    <script src="~/Scripts/Chart.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>


</body>
</html>

<script>


    function renderChart(entradas, saidas, labels) {
        var ctx = document.getElementById("myChart").getContext('2d');

        var gradientstrokeSaida = ctx.createLinearGradient(700, 0, 0, 0);
        gradientstrokeSaida.addColorStop(0, '#e8023f');
        gradientstrokeSaida.addColorStop(1, '#ff6a72');

        var gradientfillSaida = ctx.createLinearGradient(700, 0, 0, 0);
        gradientfillSaida.addColorStop(0, 'rgba(232,2,63,1)');
        gradientfillSaida.addColorStop(1, 'rgba(255,106,114,1)');



        var gradientstrokeEntrada= ctx.createLinearGradient(700, 0, 0, 0);
        gradientstrokeEntrada.addColorStop(0, '#83ff6f');
        gradientstrokeEntrada.addColorStop(1, '#50cc3c');

        var gradientfillEntrada = ctx.createLinearGradient(700, 0, 0, 0);
        gradientfillEntrada.addColorStop(0, 'rgba(131,255,111,1)');
        gradientfillEntrada.addColorStop(1, 'rgba(80,204,60,1)');



        var myChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: labels,

                datasets: [
               {
                   label: 'Entradas',
                   data: entradas,
                   borderColor: gradientstrokeEntrada,
                   backgroundColor: gradientfillEntrada,
                   pointBorderColor: '#00000',
                   pointBackgroundColor: "#ffffff",
                   pointHoverBackgroundColor: gradientstrokeEntrada,
                   pointHoverBorderColor: "#00000",
               },
               {
                   label: 'Saídas',
                   data: saidas,
                   borderColor: gradientstrokeSaida,
                   backgroundColor: gradientfillSaida,
                   pointBorderColor: "#00000",
                   pointBackgroundColor: "#ffffff",
                   pointHoverBackgroundColor: gradientstrokeSaida,
                   pointHoverBorderColor: "#00000",
               },

                ]

            },
        });
    }


    $(document).ready(function () {

        var labels = [];
        var entradas = [];
        var saidas = [];
        for (var i in dadosEntrada) {
            for (var j in dadosSaidas) {

                var entradaValor = dadosEntrada[i]["total"];
                var saidaValor = dadosSaidas[j]["total"];

                var dataConvertEntrada = parseJsonDate(dadosEntrada[i]["Data"]);
                var dataConvertSaida = parseJsonDate(dadosSaidas[j]["Data"]);

                if (dataConvertEntrada == dataConvertSaida) {
                    labels.push(dataConvertEntrada.toString());
                    entradas.push(entradaValor);
                    saidas.push(saidaValor);
                }
            }
        }
        console.log("LABELS");
        console.log(labels);
        console.log("----------");
        console.log("ENTRADAS");
        console.log(entradas);
        console.log("----------");
        console.log("ENTRADAS");
        console.log(saidas);

        renderChart(entradas, saidas, labels);
    });


    function parseJsonDate(jsonDate) {
        var offset = new Date().getTimezoneOffset() * 60000;
        var parts = /\/Date\((-?\d+)([+-]\d{2})?(\d{2})?.*/.exec(jsonDate);
        if (parts[2] == undefined) parts[2] = 0;
        if (parts[3] == undefined) parts[3] = 0;
        d = new Date(+parts[1] + offset + parts[2] * 3600000 + parts[3] * 60000);
        date = d.getDate() + 1;
        date = date < 10 ? "0" + date : date;
        mon = d.getMonth() + 1;
        mon = mon < 10 ? "0" + mon : mon;
        year = d.getFullYear();
        return (mon + "/" + year);
    };


</script>